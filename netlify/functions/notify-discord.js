export async function handler(event) {
  if (event.httpMethod !== "POST") {
    return { statusCode: 405, body: "Method Not Allowed" };
  }

  try {
    const { payload } = JSON.parse(event.body || "{}");
    if (!payload || !payload.data) {
      return { statusCode: 400, body: "Bad payload" };
    }

    const d = payload.data;
    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;
    if (!webhookUrl) {
      return { statusCode: 500, body: "Missing DISCORD_WEBHOOK_URL" };
    }

    // T·∫°o n·ªôi dung g·ªçn ƒë·∫πp
    const lines = [
      `üì© **Neww RSVP**`,
      `‚Ä¢ **Name**: ${d.name || "‚Äî"}`,
      `‚Ä¢ **Email**: ${d.email || "‚Äî"}`,
      `‚Ä¢ **Phone**: ${d.phone || "‚Äî"}`,
      `‚Ä¢ **Attendance**: ${d.attendance || "‚Äî"}`,
      `‚Ä¢ **Guests**: ${d.guests || "‚Äî"}`,
      `‚Ä¢ **Dietary**: ${d.dietary || "‚Äî"}`,
      d.message ? `‚Ä¢ **Message**: ${d.message}` : null,
    ].filter(Boolean);

    // G·ª≠i v√†o Discord (content t·ªëi ƒëa ~2000 k√Ω t·ª±)
    const content = lines.join("\n").slice(0, 1900);

    await fetch(webhookUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content }),
    });

    return { statusCode: 200, body: "OK" };
  } catch (err) {
    return { statusCode: 500, body: `Error: ${err}` };
  }
}
